; Assembly program generated by Bryce Natter's compiler.

    TITLE  procedures-test.c
    .686P
    .model  flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES


_DATA    SEGMENT
COMM  _a:DWORD
COMM  _b:DWORD
COMM  _c:DWORD
_DATA    ENDS

PUBLIC _func
;    COMDAT _func

_TEXT    SEGMENT
_func    PROC          ; COMDAT

   push  ebp
   mov   ebp,esp
   sub   esp,_func_locals$
   push  ebx
   push  esi
   push  edi
_param1$ = 8
_param2$ = 12
_param3$ = 16
_local1$1 = -4
_local2$2 = -8
_local3$3 = -12
; Line 6
    push eax
    mov  eax,11
    mov DWORD PTR _a,eax
    pop ebx        ; clean up stack 
; Line 7
    push eax
    mov  eax,7
    mov DWORD PTR _b,eax
    pop ebx        ; clean up stack 
; Line 8
    push eax
    mov  eax,3
    mov DWORD PTR _c,eax
    pop ebx        ; clean up stack 
; Line 9
    push eax
    mov  eax, DWORD PTR _b
    push eax
    mov  eax, DWORD PTR _c
    pop ebx
    add eax,ebx
    mov DWORD PTR _a,eax
    pop ebx        ; clean up stack 
; Line 10
    push eax
    mov  eax, DWORD PTR _b
    push eax
    mov  eax, DWORD PTR _a
    mov ebx,eax
    pop eax
    sub eax,ebx
    mov DWORD PTR _c,eax
    pop ebx        ; clean up stack 
; Line 11
    push eax
    mov  eax, DWORD PTR _a
    push eax
    mov  eax, DWORD PTR _c
    pop ebx
    imul eax,ebx
    mov DWORD PTR _b,eax
    pop ebx        ; clean up stack 
; Line 12
    push eax
    mov  eax, DWORD PTR _b
    push eax
    mov  eax, DWORD PTR _c
    mov ebx,eax
    pop eax
    cdq              ; sign-extend eax to edx
    idiv ebx
    mov DWORD PTR _a,eax
    pop ebx        ; clean up stack 
; Line 14
